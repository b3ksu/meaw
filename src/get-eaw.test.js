import { getEAW } from "./get-eaw.js";

/**
 * @test {getEAW}
 */
describe("getEAW(str, at)", () => {
  describe("without at specified", () => {
    it("should return the EAW property of the first character", () => {
      // single characters
      // Neutral
      expect(getEAW("\x00")).toBe("N");
      expect(getEAW("‚Ñµ")).toBe("N");
      // Narrow
      expect(getEAW("1")).toBe("Na");
      expect(getEAW("A")).toBe("Na");
      expect(getEAW("a")).toBe("Na");
      expect(getEAW(".")).toBe("Na");
      // Wide
      expect(getEAW("„ÅÇ")).toBe("W");
      expect(getEAW("„Ç¢")).toBe("W");
      expect(getEAW("ÂÆâ")).toBe("W");
      expect(getEAW("„ÄÇ")).toBe("W");
      expect(getEAW("üç£")).toBe("W");
      // Fullwidth
      expect(getEAW("Ôºë")).toBe("F");
      expect(getEAW("Ôº°")).toBe("F");
      expect(getEAW("ÔΩÅ")).toBe("F");
      // Halfwidth
      expect(getEAW("ÔΩ±")).toBe("H");
      // Ambiguous
      expect(getEAW("‚àÄ")).toBe("A");
      expect(getEAW("‚Üí")).toBe("A");
      expect(getEAW("Œ©")).toBe("A");
      expect(getEAW("–Ø")).toBe("A");

      // string
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ")).toBe("N");
    });

    it("should return undefined if the character is empty", () => {
      expect(getEAW("")).toBe(undefined);
    });
  });

  describe("with at specified", () => {
    it("should return the EAW property of the specified character", () => {
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ", 0)).toBe("N");
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ", 1)).toBe("Na");
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ", 2)).toBe("W");
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ", 3)).toBe("F");
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ", 4)).toBe("H");
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ", 5)).toBe("A");
    });

    it("should return undefined if the position is out of range", () => {
      expect(getEAW("", 0)).toBe(undefined);
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ", -1)).toBe(undefined);
      expect(getEAW("‚ÑµA„ÅÇÔº°ÔΩ±‚àÄ", 6)).toBe(undefined);
    });
  });
});
